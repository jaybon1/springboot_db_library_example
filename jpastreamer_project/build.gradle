plugins {
    id 'org.springframework.boot' version '2.6.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // 주의 사이트에는 compile로 되어 있으나 implementation을 사용해야함(그래들 버전별 구분)
    implementation 'com.speedment.jpastreamer:jpastreamer-core:1.0.2'
    annotationProcessor 'com.speedment.jpastreamer:fieldgenerator-standard:1.0.2'

    // JPAstreamer의 자동 구성은 EntityManagerFactory 존재 하는 빈에 의존합니다. Spring Data JPA를 사용하는 경우 이미 처리되어 있습니다.
//     implementation "com.speedment.jpastreamer.integration.spring:spring-boot-jpastreamer-autoconfigure:1.0.2"
}

test {
    useJUnitPlatform()
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            srcDir 'target/generated-sources/annotations'
        }
    }
}
